{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\PostSection.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Post).apply(this, arguments));\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, \"fuck\");\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar PostSection =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(PostSection, _Component2);\n\n  function PostSection(props) {\n    var _this;\n\n    _classCallCheck(this, PostSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostSection).call(this, props));\n    _this.state = {\n      isLoaded: false,\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(PostSection, [{\n    key: \"renderPost\",\n    value: function renderPost(data, i) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, data[i].channel.status);\n    }\n  }, {\n    key: \"openRequest\",\n    value: function openRequest(request) {\n      request.open(\"GET\", \"https://www.reddit.com/api/v1/access_token\", true); //\"http://www.reddit.com/r/ssbm/new.json?sort=new\"\n\n      return request;\n    }\n  }, {\n    key: \"createDivForNoStream\",\n    value: function createDivForNoStream() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Invalid game name or no one is streaming this game\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var request = new XMLHttpRequest();\n      request = this.openRequest(request);\n      var clientID = \"lJoLtuWTiCXgcQ\";\n      var secret = \"2lYjsR7Ox_VfJCoLQgPXbcDUo4A\";\n      request.setRequestHeader(\"Authorization\", \"application/json\");\n      request.send(\"grant_type=client_credentials&client_id=\" + clientID + \"&client_secret=\" + secret);\n      console.log(request);\n\n      request.onload = function () {\n        var data = JSON.parse(request.response);\n\n        if (request.status >= 200 && request.status < 400) {\n          this.setState({\n            isLoaded: true,\n            posts: data.streams\n          });\n        }\n      }.bind(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          posts = _this$state.posts;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"Loading...\");\n      } else if (posts.length == 0) {\n        return this.createDivForNoStream();\n      } else {\n        var contents = [];\n\n        for (var i = 0; i < posts.length; i++) {\n          contents.push(this.renderPost(posts, i));\n        }\n\n        console.log(contents);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, contents);\n      }\n    }\n  }]);\n\n  return PostSection;\n}(Component);\n\nexport default PostSection;","map":{"version":3,"sources":["C:\\Users\\cutep\\reddit-extension\\src\\PostSection.js"],"names":["React","Component","Post","PostSection","props","state","isLoaded","posts","data","i","channel","status","request","open","XMLHttpRequest","openRequest","clientID","secret","setRequestHeader","send","console","log","onload","JSON","parse","response","setState","streams","bind","length","createDivForNoStream","contents","push","renderPost"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,I;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;;;EALgBD,S;;IAQbE,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;+BAEUC,I,EAAMC,C,EAAG;AAClB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACID,IAAI,CAACC,CAAD,CAAJ,CAAQC,OAAR,CAAgBC,MADpB,CADF;AAKD;;;gCAEWC,O,EAAS;AACnBA,MAAAA,OAAO,CAACC,IAAR,CAAa,KAAb,EAAoB,4CAApB,EAAkE,IAAlE,EADmB,CAEvB;;AACI,aAAOD,OAAP;AACD;;;2CAEsB;AACrB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,CADF;AAKD;;;wCAEmB;AAClB,UAAIA,OAAO,GAAG,IAAIE,cAAJ,EAAd;AACAF,MAAAA,OAAO,GAAG,KAAKG,WAAL,CAAiBH,OAAjB,CAAV;AACA,UAAMI,QAAQ,GAAG,gBAAjB;AACA,UAAMC,MAAM,GAAG,6BAAf;AACAL,MAAAA,OAAO,CAACM,gBAAR,CAAyB,eAAzB,EAA0C,kBAA1C;AACAN,MAAAA,OAAO,CAACO,IAAR,CAAa,6CAA6CH,QAA7C,GAAwD,iBAAxD,GAA4EC,MAAzF;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;;AAEAA,MAAAA,OAAO,CAACU,MAAR,GAAiB,YAAY;AAC3B,YAAId,IAAI,GAAGe,IAAI,CAACC,KAAL,CAAWZ,OAAO,CAACa,QAAnB,CAAX;;AAEA,YAAIb,OAAO,CAACD,MAAR,IAAkB,GAAlB,IAAyBC,OAAO,CAACD,MAAR,GAAiB,GAA9C,EAAmD;AACjD,eAAKe,QAAL,CAAc;AACZpB,YAAAA,QAAQ,EAAE,IADE;AAEZC,YAAAA,KAAK,EAAEC,IAAI,CAACmB;AAFA,WAAd;AAID;AACF,OATgB,CASfC,IATe,CASV,IATU,CAAjB;AAUD;;;6BAEQ;AAAA,wBACqB,KAAKvB,KAD1B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;;AAGP,UAAI,CAACD,QAAL,EAAe;AACb,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAEO,IAAIC,KAAK,CAACsB,MAAN,IAAgB,CAApB,EAAuB;AAC5B,eAAQ,KAAKC,oBAAL,EAAR;AACD,OAFM,MAEA;AACL,YAAIC,QAAQ,GAAG,EAAf;;AACA,aAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACsB,MAA1B,EAAkCpB,CAAC,EAAnC,EAAuC;AACrCsB,UAAAA,QAAQ,CAACC,IAAT,CAAc,KAAKC,UAAL,CAAgB1B,KAAhB,EAAuBE,CAAvB,CAAd;AACD;;AACDW,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AAEA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIA,QADJ,CADF;AAKD;AACF;;;;EAxEuB9B,S;;AA2E1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Post extends Component {\n  render() {\n    return (\n      <div>fuck</div>\n    );\n  }\n}\n\nclass PostSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      posts: []\n    };\n  }\n\n  renderPost(data, i) {\n    return (\n      <div>\n        { data[i].channel.status }\n      </div>\n    );\n  }\n\n  openRequest(request) {\n    request.open(\"GET\", \"https://www.reddit.com/api/v1/access_token\", true);\n//\"http://www.reddit.com/r/ssbm/new.json?sort=new\"\n    return request;\n  }\n\n  createDivForNoStream() {\n    return (\n      <div>\n        <h1>Invalid game name or no one is streaming this game</h1>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    let request = new XMLHttpRequest();\n    request = this.openRequest(request);\n    const clientID = \"lJoLtuWTiCXgcQ\";\n    const secret = \"2lYjsR7Ox_VfJCoLQgPXbcDUo4A\";\n    request.setRequestHeader(\"Authorization\", \"application/json\");\n    request.send(\"grant_type=client_credentials&client_id=\" + clientID + \"&client_secret=\" + secret);\n    console.log(request);\n\n    request.onload = function () {\n      let data = JSON.parse(request.response);\n\n      if (request.status >= 200 && request.status < 400) {\n        this.setState({\n          isLoaded: true,\n          posts: data.streams\n        });\n      }\n    }.bind(this);\n  }\n\n  render() {\n    const { isLoaded, posts } = this.state;\n\n    if (!isLoaded) {\n      return <div>Loading...</div>\n    } else if (posts.length == 0) {\n      return  this.createDivForNoStream();\n    } else {\n      let contents = [];\n      for (var i = 0; i < posts.length; i++) {\n        contents.push(this.renderPost(posts, i));\n      }\n      console.log(contents);\n\n      return (\n        <div>\n          { contents }\n        </div>\n      );\n    }\n  }\n}\n\nexport default PostSection;\n"]},"metadata":{},"sourceType":"module"}