{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\GamesDropdown.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar GamesDropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GamesDropdown, _Component);\n\n  function GamesDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, GamesDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GamesDropdown).call(this, props));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GamesDropdown, [{\n    key: \"renderGameOptions\",\n    value: function renderGameOptions(game) {\n      return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, game);\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.props.handleGameSelectChange(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.games.length == 0) {\n        return React.createElement(\"select\", {\n          id: \"cb-game-to-add\",\n          className: \"combo-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          id: \"cb-initial-option\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"No Games to Show\"));\n      } else {\n        var games = [];\n\n        for (var i = 0; i < this.props.games.length; i++) {\n          games.push(React.createElement(\"option\", {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, this.props.games[i]));\n        }\n\n        return React.createElement(\"select\", {\n          id: \"cb-game-to-add\",\n          className: \"combo-box\",\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, games);\n      }\n    }\n  }]);\n\n  return GamesDropdown;\n}(Component);\n\nexport default GamesDropdown;","map":{"version":3,"sources":["C:\\Users\\cutep\\reddit-extension\\src\\GamesDropdown.js"],"names":["React","Component","GamesDropdown","props","onChange","bind","game","e","handleGameSelectChange","target","value","games","length","i","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AAEA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AAHiB;AAIlB;;;;sCAEiBC,I,EAAM;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASA,IAAT,CAAP;AACD;;;6BAEQC,C,EAAG;AACV,WAAKJ,KAAL,CAAWK,sBAAX,CAAkCD,CAAC,CAACE,MAAF,CAASC,KAA3C;AACD;;;6BAEQ;AACP,UAAI,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAjB,IAA2B,CAA/B,EAAkC;AAChC,eACE;AAAQ,UAAA,EAAE,EAAC,gBAAX;AAA4B,UAAA,SAAS,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,EAAE,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF;AAKD,OAND,MAMO;AACL,YAAID,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,KAAL,CAAWQ,KAAX,CAAiBC,MAArC,EAA6CC,CAAC,EAA9C,EAAkD;AAChDF,UAAAA,KAAK,CAACG,IAAN,CAAW;AAAQ,YAAA,GAAG,EAAED,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkB,KAAKV,KAAL,CAAWQ,KAAX,CAAiBE,CAAjB,CAAlB,CAAX;AACD;;AAED,eACE;AAAQ,UAAA,EAAE,EAAC,gBAAX;AAA4B,UAAA,SAAS,EAAC,WAAtC;AAAkD,UAAA,QAAQ,EAAE,KAAKT,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIO,KADJ,CADF;AAKD;AACF;;;;EAlCyBV,S;;AAqC5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass GamesDropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  renderGameOptions(game) {\r\n    return <option>{game}</option>;\r\n  }\r\n\r\n  onChange(e) {\r\n    this.props.handleGameSelectChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.games.length == 0) {\r\n      return (\r\n        <select id=\"cb-game-to-add\" className=\"combo-box\">\r\n          <option id=\"cb-initial-option\">No Games to Show</option>\r\n        </select>\r\n      );\r\n    } else {\r\n      let games = [];\r\n      for (let i = 0; i < this.props.games.length; i++) {\r\n        games.push(<option key={i}>{ this.props.games[i] }</option>);\r\n      }\r\n\r\n      return (\r\n        <select id=\"cb-game-to-add\" className=\"combo-box\" onChange={this.onChange}>\r\n          { games }\r\n        </select>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GamesDropdown;\r\n"]},"metadata":{},"sourceType":"module"}