{"ast":null,"code":"import { createStore } from 'redux';\nimport reducer from '../reducers';\nimport { loadGames, saveGames } from '../localStorage';\nvar games = loadGames();\n/*Set initial state of selected game to the first in the array if it exists\r\n  and if not set the selected game to \"\" so it will show all streams.*/\n\nvar selectedGame = games.length !== 0 ? games[0] : \"\";\nvar initialState = {\n  games: games,\n  selectedGame: selectedGame\n};\nexport var store = createStore(reducer, initialState); //Save games to local storage whenever a change to state of games occurs.\n\nstore.subscribe(function () {\n  saveGames(store.getState().games);\n});\nexport default store;","map":{"version":3,"sources":["F:\\Users\\Rodney\\Documents\\WebDevelopment\\react-redux\\src\\store\\index.js"],"names":["createStore","reducer","loadGames","saveGames","games","selectedGame","length","initialState","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,iBAAnC;AAEA,IAAMC,KAAK,GAAGF,SAAS,EAAvB;AACA;;;AAEA,IAAMG,YAAY,GAAKD,KAAK,CAACE,MAAN,KAAiB,CAAlB,GAAuBF,KAAK,CAAC,CAAD,CAA5B,GAAkC,EAAxD;AAEA,IAAMG,YAAY,GAAG;AACnBH,EAAAA,KAAK,EAAEA,KADY;AAEnBC,EAAAA,YAAY,EAAEA;AAFK,CAArB;AAIA,OAAO,IAAMG,KAAK,GAAGR,WAAW,CAACC,OAAD,EAAUM,YAAV,CAAzB,C,CACP;;AACAC,KAAK,CAACC,SAAN,CAAgB,YAAM;AAACN,EAAAA,SAAS,CAACK,KAAK,CAACE,QAAN,GAAiBN,KAAlB,CAAT;AAAkC,CAAzD;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport reducer from '../reducers';\r\nimport {loadGames, saveGames} from '../localStorage';\r\n\r\nconst games = loadGames()\r\n/*Set initial state of selected game to the first in the array if it exists\r\n  and if not set the selected game to \"\" so it will show all streams.*/\r\nconst selectedGame = ((games.length !== 0) ? games[0] : \"\");\r\n\r\nconst initialState = {\r\n  games: games,\r\n  selectedGame: selectedGame\r\n}\r\nexport const store = createStore(reducer, initialState);\r\n//Save games to local storage whenever a change to state of games occurs.\r\nstore.subscribe(() => {saveGames(store.getState().games)});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}