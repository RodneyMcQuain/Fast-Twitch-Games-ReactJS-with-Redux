{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\Header.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { default as GamesDropdown } from './GamesDropdown';\n/*gameValue and gameName are separate state variables so that GamesDropdown\r\n  isn't updated everytime something is typed in the textbox. Instead it is\r\n  only updated when the add game button is clicked.*/\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      games: [],\n      gameName: \"\",\n      gameValue: \"\"\n    };\n    _this.handleTextboxGameChange = _this.handleTextboxGameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddGameClick = _this.handleAddGameClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRemoveGameClick = _this.handleRemoveGameClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleMoveGameToTopButton = _this.handleMoveGameToTopButton.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"handleAddGameClick\",\n    value: function handleAddGameClick(e) {\n      this.setState({\n        games: this.state.games.concat(this.state.gameName),\n        gameValue: this.state.gameName\n      }); //When a game is added it becomes the selected game.\n\n      this.props.handleGameSelectChange(this.state.gameName); //Clear text box after addition of game.\n\n      this.setState({\n        gameName: \"\"\n      });\n    }\n  }, {\n    key: \"handleRemoveGameClick\",\n    value: function handleRemoveGameClick(e) {\n      var _this$state = this.state,\n          games = _this$state.games,\n          gameName = _this$state.gameName;\n\n      for (var i = 0; i < games.length; i++) {\n        if (games[i] == this.props.selectedGame) {\n          games.splice(i, 1);\n          break;\n        }\n      }\n\n      this.setState({\n        games: games\n      });\n      if (this.state.games.length > 0) this.props.handleGameSelectChange(this.state.games[0]);\n    }\n  }, {\n    key: \"handleMoveGameToTopButton\",\n    value: function handleMoveGameToTopButton(e) {\n      var _this$state2 = this.state,\n          games = _this$state2.games,\n          gameName = _this$state2.gameName;\n\n      for (var i = 0; i < games.length; i++) {\n        if (games[i] == this.props.selectedGame) {\n          //let temp = games[i];\n          games.unshift(games[i]);\n          games.splice(i, 1);\n          console.log(games);\n          break;\n        }\n      }\n\n      this.setState({\n        games: games\n      });\n    }\n  }, {\n    key: \"handleTextboxGameChange\",\n    value: function handleTextboxGameChange(e) {\n      this.setState({\n        gameName: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"add-game-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.gameName,\n        onChange: this.handleTextboxGameChange,\n        id: \"tf-game-to-add\",\n        className: \"text-field fa\",\n        placeholder: \"\\uF11B Game to Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleAddGameClick,\n        id: \"btn-game-to-add\",\n        className: \"btn fa fa-plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(GamesDropdown, {\n        gameValue: this.state.gameValue,\n        games: this.state.games,\n        handleGameSelectChange: this.props.handleGameSelectChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleRemoveGameClick,\n        id: \"btn-game-to-remove\",\n        className: \"btn fa fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleMoveGameToTopButton,\n        id: \"btn-game-to-top\",\n        className: \"btn fa fa-arrow-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default Header;","map":{"version":3,"sources":["C:\\Users\\cutep\\reddit-extension\\src\\Header.js"],"names":["React","Component","default","GamesDropdown","Header","props","state","games","gameName","gameValue","handleTextboxGameChange","bind","handleAddGameClick","handleRemoveGameClick","handleMoveGameToTopButton","e","setState","concat","handleGameSelectChange","i","length","selectedGame","splice","unshift","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {default as GamesDropdown} from './GamesDropdown';\r\n\r\n/*gameValue and gameName are separate state variables so that GamesDropdown\r\n  isn't updated everytime something is typed in the textbox. Instead it is\r\n  only updated when the add game button is clicked.*/\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      games: [],\r\n      gameName: \"\",\r\n      gameValue: \"\"\r\n    }\r\n\r\n    this.handleTextboxGameChange = this.handleTextboxGameChange.bind(this);\r\n    this.handleAddGameClick = this.handleAddGameClick.bind(this);\r\n    this.handleRemoveGameClick = this.handleRemoveGameClick.bind(this);\r\n    this.handleMoveGameToTopButton = this.handleMoveGameToTopButton.bind(this);\r\n  }\r\n\r\n  handleAddGameClick(e) {\r\n    this.setState({\r\n      games: this.state.games.concat(this.state.gameName),\r\n      gameValue: this.state.gameName\r\n    });\r\n\r\n    //When a game is added it becomes the selected game.\r\n    this.props.handleGameSelectChange(this.state.gameName);\r\n\r\n    //Clear text box after addition of game.\r\n    this.setState({gameName: \"\"});\r\n  }\r\n\r\n  handleRemoveGameClick(e) {\r\n    const { games, gameName } = this.state;\r\n\r\n    for (let i = 0; i < games.length; i++) {\r\n      if (games[i] == this.props.selectedGame) {\r\n        games.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({games: games});\r\n\r\n    if (this.state.games.length > 0)\r\n      this.props.handleGameSelectChange(this.state.games[0]);\r\n  }\r\n\r\n  handleMoveGameToTopButton(e) {\r\n    const { games, gameName } = this.state;\r\n\r\n    for (let i = 0; i < games.length; i++) {\r\n      if (games[i] == this.props.selectedGame) {\r\n        //let temp = games[i];\r\n        games.unshift(games[i]);\r\n        games.splice(i, 1);\r\n        console.log(games);\r\n        break;\r\n      }\r\n    }\r\n\r\n    this.setState({games: games});\r\n  }\r\n\r\n  handleTextboxGameChange(e) {\r\n    this.setState({gameName: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"add-game-container\">\r\n        <input value={this.state.gameName} onChange={this.handleTextboxGameChange} id=\"tf-game-to-add\" className=\"text-field fa\" placeholder=\"&#xf11b; Game to Add\"></input>\r\n        <button onClick={this.handleAddGameClick} id=\"btn-game-to-add\" className=\"btn fa fa-plus\"></button>\r\n\r\n        <div>\r\n          <GamesDropdown gameValue={this.state.gameValue} games={this.state.games} handleGameSelectChange={this.props.handleGameSelectChange}/>\r\n          <button onClick={this.handleRemoveGameClick} id=\"btn-game-to-remove\" className=\"btn fa fa-trash\"></button>\r\n          <button onClick={this.handleMoveGameToTopButton} id=\"btn-game-to-top\" className=\"btn fa fa-arrow-up\"></button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}