{"ast":null,"code":"import _classCallCheck from \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\Users\\\\Rodney\\\\Documents\\\\WebDevelopment\\\\react-redux\\\\src\\\\GamesDropdown.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n/*Stores games in a dropdown box and handles when\r\n  a new game is selected.*/\n\nvar GamesDropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GamesDropdown, _Component);\n\n  function GamesDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, GamesDropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GamesDropdown).call(this, props));\n    _this.state = {\n      gameValue: _this.props.gameValue\n    };\n    _this.handleOnChange_GamesDropdown = _this.handleOnChange_GamesDropdown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /*If the previous prop value is not the same as the new\r\n    one update the state of gameValue to the New prop.*/\n\n\n  _createClass(GamesDropdown, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.gameValue !== prevProps.gameValue) this.setState({\n        gameValue: this.props.gameValue\n      });\n    }\n    /*OnChange event for when a new game is selected.\r\n      The game selected is then passed up to the parent.*/\n\n  }, {\n    key: \"handleOnChange_GamesDropdown\",\n    value: function handleOnChange_GamesDropdown(e) {\n      var gameValue = e.target.value;\n      this.setState({\n        gameValue: gameValue\n      });\n      this.props.setSelectedGame(gameValue);\n    }\n    /*If there are no games then an appropriate message is returned\r\n      as an option of the dropdown. If there are games then populate\r\n      the dropdown with the games.*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var propsGames = this.props.games;\n\n      if (propsGames.length === 0) {\n        return React.createElement(\"select\", {\n          className: \"combo-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"No Games to Show\"));\n      } else {\n        var games = [];\n\n        for (var i = 0; i < propsGames.length; i++) {\n          games.push(React.createElement(\"option\", {\n            value: propsGames[i],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, propsGames[i]));\n        }\n\n        return React.createElement(\"select\", {\n          value: this.state.gameValue,\n          onChange: this.handleOnChange_GamesDropdown,\n          className: \"combo-box\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, games);\n      }\n    }\n  }]);\n\n  return GamesDropdown;\n}(Component);\n\nexport default GamesDropdown;","map":{"version":3,"sources":["F:\\Users\\Rodney\\Documents\\WebDevelopment\\react-redux\\src\\GamesDropdown.js"],"names":["React","Component","GamesDropdown","props","state","gameValue","handleOnChange_GamesDropdown","bind","prevProps","setState","e","target","value","setSelectedGame","propsGames","games","length","i","push"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA;;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE,MAAKF,KAAL,CAAWE;AAAvB,KAAb;AAEA,UAAKC,4BAAL,GAAoC,MAAKA,4BAAL,CAAkCC,IAAlC,uDAApC;AALiB;AAMlB;AAED;;;;;;uCAEmBC,S,EAAW;AAC5B,UAAI,KAAKL,KAAL,CAAWE,SAAX,KAAyBG,SAAS,CAACH,SAAvC,EACE,KAAKI,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWE;AAAvB,OAAd;AACH;AAED;;;;;iDAE6BK,C,EAAG;AAC9B,UAAIL,SAAS,GAAGK,CAAC,CAACC,MAAF,CAASC,KAAzB;AAEA,WAAKH,QAAL,CAAc;AAACJ,QAAAA,SAAS,EAAEA;AAAZ,OAAd;AACA,WAAKF,KAAL,CAAWU,eAAX,CAA2BR,SAA3B;AACD;AAED;;;;;;6BAGS;AACP,UAAIS,UAAU,GAAG,KAAKX,KAAL,CAAWY,KAA5B;;AAEA,UAAID,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,eACE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF;AAKD,OAND,MAMO;AACL,YAAID,KAAK,GAAG,EAAZ;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACE,MAA/B,EAAuCC,CAAC,EAAxC;AACEF,UAAAA,KAAK,CAACG,IAAN,CAAW;AAAQ,YAAA,KAAK,EAAEJ,UAAU,CAACG,CAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgCH,UAAU,CAACG,CAAD,CAA1C,CAAX;AADF;;AAGA,eACE;AAAQ,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,SAA1B;AAAqC,UAAA,QAAQ,EAAE,KAAKC,4BAApD;AAAkF,UAAA,SAAS,EAAC,WAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACIS,KADJ,CADF;AAKD;AACF;;;;EAhDyBd,S;;AAmD5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n/*Stores games in a dropdown box and handles when\r\n  a new game is selected.*/\r\nclass GamesDropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {gameValue: this.props.gameValue};\r\n\r\n    this.handleOnChange_GamesDropdown = this.handleOnChange_GamesDropdown.bind(this);\r\n  }\r\n\r\n  /*If the previous prop value is not the same as the new\r\n    one update the state of gameValue to the New prop.*/\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.gameValue !== prevProps.gameValue)\r\n      this.setState({gameValue: this.props.gameValue});\r\n  }\r\n\r\n  /*OnChange event for when a new game is selected.\r\n    The game selected is then passed up to the parent.*/\r\n  handleOnChange_GamesDropdown(e) {\r\n    let gameValue = e.target.value;\r\n\r\n    this.setState({gameValue: gameValue});\r\n    this.props.setSelectedGame(gameValue);\r\n  }\r\n\r\n  /*If there are no games then an appropriate message is returned\r\n    as an option of the dropdown. If there are games then populate\r\n    the dropdown with the games.*/\r\n  render() {\r\n    let propsGames = this.props.games;\r\n\r\n    if (propsGames.length === 0) {\r\n      return (\r\n        <select className=\"combo-box\">\r\n          <option>No Games to Show</option>\r\n        </select>\r\n      );\r\n    } else {\r\n      let games = [];\r\n      for (let i = 0; i < propsGames.length; i++)\r\n        games.push(<option value={propsGames[i]}>{ propsGames[i] }</option>);\r\n\r\n      return (\r\n        <select value={this.state.gameValue} onChange={this.handleOnChange_GamesDropdown} className=\"combo-box\">\r\n          { games }\r\n        </select>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GamesDropdown;\r\n"]},"metadata":{},"sourceType":"module"}