{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\PostSection.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    _classCallCheck(this, Post);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Post).apply(this, arguments));\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }, \"fuck\");\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nvar PostSection =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(PostSection, _Component2);\n\n  function PostSection(props) {\n    var _this;\n\n    _classCallCheck(this, PostSection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PostSection).call(this, props));\n    _this.state = {\n      isLoaded: false,\n      posts: []\n    };\n    return _this;\n  }\n\n  _createClass(PostSection, [{\n    key: \"renderPost\",\n    value: function renderPost(data, i) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"fuck\");\n    }\n  }, {\n    key: \"openRequest\",\n    value: function openRequest(request, gameName) {\n      var gameNameSplit = gameName.split(\" \");\n      var gameUrl = gameNameSplit.join(\"%20\");\n      request.open(\"GET\", \"https://api.twitch.tv/kraken/streams/?game=\" + gameUrl, true);\n      console.log(request);\n      return request;\n    }\n  }, {\n    key: \"createDivForNoStream\",\n    value: function createDivForNoStream() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Invalid game name or no one is streaming this game\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      //api call\n      var gameName = \"Super Smash Bros. Melee\";\n      var request = new XMLHttpRequest();\n      request = this.openRequest(request, gameName);\n      request.setRequestHeader('Client-ID', \"psg3wise3seulmw0lel36ofzu1edew\");\n      console.log(request);\n      console.log(\"fuck\" + request);\n      var contents = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n\n      request.onload = function () {\n        console.log(\"fuck\" + request);\n        var data = JSON.parse(this.response);\n\n        if (request.status >= 200 && request.status < 400) {\n          if (data.streams.length == 0) {\n            //Called when there is no one streaming the specified game.\n            contents = this.createDivForNoStream();\n          } else {\n            for (var i = 0; i < data.streams.length; i++) {\n              contents += this.renderPost(data, i);\n            }\n          }\n        } else {\n          contents = React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"error\");\n        }\n      };\n\n      return contents;\n    }\n  }]);\n\n  return PostSection;\n}(Component);\n\nexport default PostSection;","map":{"version":3,"sources":["C:\\Users\\cutep\\reddit-extension\\src\\PostSection.js"],"names":["React","Component","Post","PostSection","props","state","isLoaded","posts","data","i","request","gameName","gameNameSplit","split","gameUrl","join","open","console","log","XMLHttpRequest","openRequest","setRequestHeader","contents","onload","JSON","parse","response","status","streams","length","createDivForNoStream","renderPost"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,I;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;;;EALgBD,S;;IAQbE,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;+BAEUC,I,EAAMC,C,EAAG;AAClB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD;;;gCAEWC,O,EAASC,Q,EAAU;AAC7B,UAAIC,aAAa,GAAGD,QAAQ,CAACE,KAAT,CAAe,GAAf,CAApB;AACA,UAAIC,OAAO,GAAGF,aAAa,CAACG,IAAd,CAAmB,KAAnB,CAAd;AAEAL,MAAAA,OAAO,CAACM,IAAR,CAAa,KAAb,EAAoB,gDAAgDF,OAApE,EAA6E,IAA7E;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEA,aAAOA,OAAP;AACD;;;2CAEsB;AACrB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,CADF;AAKD;;;wCAEmB,CAEnB;;;6BAEQ;AACP;AACA,UAAIC,QAAQ,GAAG,yBAAf;AACA,UAAID,OAAO,GAAG,IAAIS,cAAJ,EAAd;AACAT,MAAAA,OAAO,GAAG,KAAKU,WAAL,CAAiBV,OAAjB,EAA0BC,QAA1B,CAAV;AACAD,MAAAA,OAAO,CAACW,gBAAR,CAAyB,WAAzB,EAAsC,gCAAtC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAY,SAASR,OAArB;AACA,UAAIY,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;;AACAZ,MAAAA,OAAO,CAACa,MAAR,GAAiB,YAAY;AAC3BN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAASR,OAArB;AAEA,YAAIF,IAAI,GAAGgB,IAAI,CAACC,KAAL,CAAW,KAAKC,QAAhB,CAAX;;AACA,YAAIhB,OAAO,CAACiB,MAAR,IAAkB,GAAlB,IAAyBjB,OAAO,CAACiB,MAAR,GAAiB,GAA9C,EAAmD;AACjD,cAAInB,IAAI,CAACoB,OAAL,CAAaC,MAAb,IAAuB,CAA3B,EAA8B;AAC5B;AACAP,YAAAA,QAAQ,GAAG,KAAKQ,oBAAL,EAAX;AACD,WAHD,MAGO;AACL,iBAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACoB,OAAL,CAAaC,MAAjC,EAAyCpB,CAAC,EAA1C,EAA8C;AAC5Ca,cAAAA,QAAQ,IAAI,KAAKS,UAAL,CAAgBvB,IAAhB,EAAsBC,CAAtB,CAAZ;AACD;AACF;AACF,SATD,MASO;AACLa,UAAAA,QAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAX;AACD;AACF,OAhBD;;AAkBA,aAAOA,QAAP;AACD;;;;EAlEuBrB,S;;AAqE1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Post extends Component {\n  render() {\n    return (\n      <div>fuck</div>\n    );\n  }\n}\n\nclass PostSection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      posts: []\n    };\n  }\n\n  renderPost(data, i) {\n    return (\n      <div>fuck</div>\n    );\n  }\n\n  openRequest(request, gameName) {\n    let gameNameSplit = gameName.split(\" \");\n    let gameUrl = gameNameSplit.join(\"%20\");\n\n    request.open(\"GET\", \"https://api.twitch.tv/kraken/streams/?game=\" + gameUrl, true);\n    console.log(request);\n\n    return request;\n  }\n\n  createDivForNoStream() {\n    return (\n      <div>\n        <h1>Invalid game name or no one is streaming this game</h1>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    //api call\n    let gameName = \"Super Smash Bros. Melee\";\n    let request = new XMLHttpRequest();\n    request = this.openRequest(request, gameName);\n    request.setRequestHeader('Client-ID', \"psg3wise3seulmw0lel36ofzu1edew\");\n    console.log(request);\n\n    console.log(\"fuck\" + request);\n    let contents = <div></div>;\n    request.onload = function () {\n      console.log(\"fuck\" + request);\n\n      let data = JSON.parse(this.response);\n      if (request.status >= 200 && request.status < 400) {\n        if (data.streams.length == 0) {\n          //Called when there is no one streaming the specified game.\n          contents = this.createDivForNoStream();\n        } else {\n          for (var i = 0; i < data.streams.length; i++) {\n            contents += this.renderPost(data, i);\n          }\n        }\n      } else {\n        contents = <div>error</div>\n      }\n    }\n\n    return contents;\n  }\n}\n\nexport default PostSection;\n"]},"metadata":{},"sourceType":"module"}