{"ast":null,"code":"export var loadGames = function loadGames() {\n  try {\n    var gamesStorageSerialized = localStorage.getItem(\"games\");\n    if (gamesStorageSerialized === null) return [];\n    var gamesStorage = JSON.parse(gamesStorageSerialized);\n    var games = [];\n    var selectedGame = \"\";\n    if (gamesStorage != null && gamesStorage.trim() !== \"\") games = gamesStorage.split(\",;:!\");\n  } catch (err) {\n    return [];\n  }\n};\n/*Sets the local storage, typically after addition, removal,\r\n  or moving up of a game.*/\n\nexport var saveGames = function saveGames(games) {\n  try {\n    var toLocalStoreString = games.join(\",;:!\");\n    var serializedGames = JSON.stringify(toLocalStoreString);\n    localStorage.setItem('games', serializedGames);\n  } catch (err) {//Ignore\n  }\n};","map":{"version":3,"sources":["F:\\Users\\Rodney\\Documents\\WebDevelopment\\react-redux\\src\\localStorage\\index.js"],"names":["loadGames","gamesStorageSerialized","localStorage","getItem","gamesStorage","JSON","parse","games","selectedGame","trim","split","err","saveGames","toLocalStoreString","join","serializedGames","stringify","setItem"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7B,MAAI;AACF,QAAMC,sBAAsB,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA/B;AAEA,QAAIF,sBAAsB,KAAK,IAA/B,EACE,OAAO,EAAP;AAEF,QAAMG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,sBAAX,CAArB;AACA,QAAIM,KAAK,GAAG,EAAZ;AACA,QAAIC,YAAY,GAAG,EAAnB;AACA,QAAIJ,YAAY,IAAI,IAAhB,IAAwBA,YAAY,CAACK,IAAb,OAAwB,EAApD,EACEF,KAAK,GAAGH,YAAY,CAACM,KAAb,CAAmB,MAAnB,CAAR;AACH,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZ,WAAO,EAAP;AACD;AACF,CAfM;AAiBP;;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACL,KAAD,EAAW;AAClC,MAAI;AACF,QAAIM,kBAAkB,GAAGN,KAAK,CAACO,IAAN,CAAW,MAAX,CAAzB;AACA,QAAMC,eAAe,GAAGV,IAAI,CAACW,SAAL,CAAeH,kBAAf,CAAxB;AAEAX,IAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BF,eAA9B;AACD,GALD,CAKE,OAAOJ,GAAP,EAAY,CACZ;AACD;AACF,CATM","sourcesContent":["export const loadGames = () => {\r\n  try {\r\n    const gamesStorageSerialized = localStorage.getItem(\"games\");\r\n\r\n    if (gamesStorageSerialized === null)\r\n      return [];\r\n\r\n    const gamesStorage = JSON.parse(gamesStorageSerialized);\r\n    let games = [];\r\n    let selectedGame = \"\";\r\n    if (gamesStorage != null && gamesStorage.trim() !== \"\")\r\n      games = gamesStorage.split(\",;:!\");\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n}\r\n\r\n/*Sets the local storage, typically after addition, removal,\r\n  or moving up of a game.*/\r\nexport const saveGames = (games) => {\r\n  try {\r\n    let toLocalStoreString = games.join(\",;:!\");\r\n    const serializedGames = JSON.stringify(toLocalStoreString);\r\n\r\n    localStorage.setItem('games', serializedGames);\r\n  } catch (err) {\r\n    //Ignore\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}