{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\GamesDropdown.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\Status.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\Header.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\Stream.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\Streams.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\config.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\App.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\cutep\\\\reddit-extension\\\\src\\\\index.js\"],\"names\":[\"GamesDropdown\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"gameValue\",\"handleOnChange_GamesDropdown\",\"bind\",\"assertThisInitialized\",\"prevProps\",\"setState\",\"e\",\"target\",\"value\",\"setSelectedGame\",\"propsGames\",\"games\",\"length\",\"react_default\",\"a\",\"createElement\",\"className\",\"i\",\"push\",\"onChange\",\"Component\",\"Status\",\"_this$props\",\"statusGood\",\"statusBad\",\"setTimeout\",\"setStatusGood\",\"ReactCSSTransitionReplace_default\",\"transitionName\",\"transitionEnterTimeout\",\"transitionLeaveTimeout\",\"key\",\"id\",\"setStatusBad\",\"Header\",\"gameName\",\"handleOnChange_tbGame\",\"handleOnClick_btAddGame\",\"handleOnClick_btRemoveGame\",\"handleOnClick_btMoveGameToTop\",\"gamesStorage\",\"JSON\",\"parse\",\"localStorage\",\"getItem\",\"trim\",\"gamesArr\",\"split\",\"setSelectedGameToFirst\",\"_this$state\",\"concat\",\"setGameComboBoxLocalStorage\",\"selectedGame\",\"splice\",\"setSelectedGameToFirstAndComboBoxLocalStorage\",\"unshift\",\"toStoreString\",\"join\",\"setItem\",\"stringify\",\"placeholder\",\"onClick\",\"src_GamesDropdown\",\"src_Status\",\"Stream\",\"href\",\"url\",\"src\",\"thumbnail\",\"displayName\",\"title\",\"viewers\",\"Streams\",\"isLoaded\",\"streamsApiData\",\"_this2\",\"apiCall\",\"request\",\"XMLHttpRequest\",\"openRequest\",\"setRequestHeader\",\"send\",\"onload\",\"response\",\"status\",\"streams\",\"gameUrl\",\"open\",\"createDivForNoStream\",\"renderStream\",\"data\",\"src_Stream\",\"preview\",\"small\",\"channel\",\"display_name\",\"App\",\"src_Header\",\"src_Streams\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\r\\nimport './App.css';\\r\\n\\r\\n/*Stores games in a dropdown box and handles when\\r\\n  a new game is selected.*/\\r\\nclass GamesDropdown extends Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n\\r\\n    this.state = {gameValue: this.props.gameValue};\\r\\n\\r\\n    this.handleOnChange_GamesDropdown = this.handleOnChange_GamesDropdown.bind(this);\\r\\n  }\\r\\n\\r\\n  /*If the previous prop value is not the same as the new\\r\\n    one update the state of gameValue to the New prop.*/\\r\\n  componentDidUpdate(prevProps) {\\r\\n    if (this.props.gameValue !== prevProps.gameValue)\\r\\n      this.setState({gameValue: this.props.gameValue});\\r\\n  }\\r\\n\\r\\n  /*OnChange event for when a new game is selected.\\r\\n    The game selected is then passed up to the parent.*/\\r\\n  handleOnChange_GamesDropdown(e) {\\r\\n    let gameValue = e.target.value;\\r\\n\\r\\n    this.setState({gameValue: gameValue});\\r\\n    this.props.setSelectedGame(gameValue);\\r\\n  }\\r\\n\\r\\n  /*If there are no games then an appropriate message is returned\\r\\n    as an option of the dropdown. If there are games then populate\\r\\n    the dropdown with the games.*/\\r\\n  render() {\\r\\n    let propsGames = this.props.games;\\r\\n\\r\\n    if (propsGames.length === 0) {\\r\\n      return (\\r\\n        <select className=\\\"combo-box\\\">\\r\\n          <option>No Games to Show</option>\\r\\n        </select>\\r\\n      );\\r\\n    } else {\\r\\n      let games = [];\\r\\n      for (let i = 0; i < propsGames.length; i++)\\r\\n        games.push(<option value={propsGames[i]}>{ propsGames[i] }</option>);\\r\\n\\r\\n      return (\\r\\n        <select value={this.state.gameValue} onChange={this.handleOnChange_GamesDropdown} className=\\\"combo-box\\\">\\r\\n          { games }\\r\\n        </select>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default GamesDropdown;\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport './App.css';\\r\\nimport ReactCSSTransitionReplace from 'react-css-transition-replace';\\r\\n\\r\\n//Class for the status of the addition of a game.\\r\\nclass Status extends Component {\\r\\n  /*If statusGood and statusBad are false take no action.\\r\\n    If statusGood or statusBad is true return an appropriate\\r\\n    status message and set a timeout to make it false in 3000ms so the\\r\\n    status message will disappear.*/\\r\\n  render() {\\r\\n    const { statusGood, statusBad } = this.props;\\r\\n\\r\\n    if (!statusGood && !statusBad)\\r\\n      return (\\r\\n        <ReactCSSTransitionReplace\\r\\n          transitionName=\\\"cross-fade\\\"\\r\\n          transitionEnterTimeout={500}\\r\\n          transitionLeaveTimeout={500}\\r\\n        >\\r\\n          <div key=\\\"transitioning-component-0\\\"></div>\\r\\n        </ReactCSSTransitionReplace>\\r\\n      );\\r\\n    else if (statusGood) {\\r\\n      setTimeout(() => {this.props.setStatusGood(false)}, 3000);\\r\\n\\r\\n      return (\\r\\n        <ReactCSSTransitionReplace\\r\\n          transitionName=\\\"cross-fade\\\"\\r\\n          transitionEnterTimeout={500}\\r\\n          transitionLeaveTimeout={500}\\r\\n        >\\r\\n          <div key=\\\"transitioning-component-1\\\" id=\\\"status-game-to-add\\\" className=\\\"status-good\\\">Successful</div>\\r\\n        </ReactCSSTransitionReplace>\\r\\n      );\\r\\n    } else if (statusBad) {\\r\\n      setTimeout(() => {this.props.setStatusBad(false)}, 3000);\\r\\n\\r\\n      return (\\r\\n        <ReactCSSTransitionReplace\\r\\n          transitionName=\\\"cross-fade\\\"\\r\\n          transitionEnterTimeout={500}\\r\\n          transitionLeaveTimeout={500}\\r\\n        >\\r\\n          <div key=\\\"transitioning-component-2\\\" id=\\\"status-game-to-add\\\" className=\\\"status-bad\\\">Duplicate, nothing added</div>\\r\\n        </ReactCSSTransitionReplace>\\r\\n      );\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default Status;\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport './App.css';\\r\\nimport 'font-awesome/css/font-awesome.min.css';\\r\\nimport {default as GamesDropdown} from './GamesDropdown';\\r\\nimport {default as Status} from './Status';\\r\\n\\r\\n/*Class for the header section for project, that contains the controls\\r\\n  for the application.*/\\r\\nclass Header extends Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n\\r\\n    /*gameValue and gameName are separate state variables so that GamesDropdown\\r\\n      isn't updated everytime something is typed in the textbox. Instead it is\\r\\n      only updated when the add game button is clicked.*/\\r\\n    this.state = {\\r\\n      games: [],\\r\\n      gameName: \\\"\\\",\\r\\n      gameValue: \\\"\\\",\\r\\n      statusGood: false,\\r\\n      statusBad: false\\r\\n    }\\r\\n\\r\\n    this.handleOnChange_tbGame = this.handleOnChange_tbGame.bind(this);\\r\\n    this.handleOnClick_btAddGame = this.handleOnClick_btAddGame.bind(this);\\r\\n    this.handleOnClick_btRemoveGame = this.handleOnClick_btRemoveGame.bind(this);\\r\\n    this.handleOnClick_btMoveGameToTop = this.handleOnClick_btMoveGameToTop.bind(this);\\r\\n    this.setStatusBad = this.setStatusBad.bind(this);\\r\\n    this.setStatusGood = this.setStatusGood.bind(this);\\r\\n  }\\r\\n\\r\\n  //Loads games from local storage after mount.\\r\\n  componentDidMount() {\\r\\n    let gamesStorage = JSON.parse(localStorage.getItem(\\\"games\\\"));\\r\\n\\r\\n    if (gamesStorage != null && gamesStorage.trim() !== \\\"\\\") {\\r\\n      let gamesArr = gamesStorage.split(\\\",;:!\\\");\\r\\n      this.setState({games: gamesArr}, this.setSelectedGameToFirst);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  //Sets statusBad based on response from HeaderStatus.\\r\\n  setStatusBad(statusBad) {\\r\\n    this.setState({statusBad: statusBad});\\r\\n  }\\r\\n\\r\\n  //Sets statusGood based on response from HeaderStatus.\\r\\n  setStatusGood(statusGood) {\\r\\n    this.setState({statusGood: statusGood});\\r\\n  }\\r\\n\\r\\n  //OnClick event for the add game button.\\r\\n  handleOnClick_btAddGame(e) {\\r\\n    const { games, gameName } = this.state;\\r\\n\\r\\n    for (let i = 0; i < games.length; i++) {\\r\\n      if (games[i] == gameName) {\\r\\n        this.setState({statusBad: true}, this.setState({statusBad: false}));\\r\\n        return;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    this.setState({\\r\\n      games: games.concat(gameName),\\r\\n      gameValue: gameName\\r\\n    }, this.setGameComboBoxLocalStorage);\\r\\n\\r\\n    //When a game is added it becomes the selected game.\\r\\n    this.props.setSelectedGame(this.state.gameName);\\r\\n\\r\\n    /*Clear text box after addition of game and set statusGood\\r\\n      to true because the addition was successful.*/\\r\\n    this.setState({\\r\\n      gameName: \\\"\\\",\\r\\n      statusGood: true\\r\\n    });\\r\\n  }\\r\\n\\r\\n  //OnClick event for the remove game button.\\r\\n  handleOnClick_btRemoveGame(e) {\\r\\n    const games = this.state.games;\\r\\n\\r\\n    for (let i = 0; i < games.length; i++)\\r\\n      if (games[i] === this.props.selectedGame) {\\r\\n        games.splice(i, 1);\\r\\n        break;\\r\\n      }\\r\\n\\r\\n    this.setState({games: games}, this.setSelectedGameToFirstAndComboBoxLocalStorage);\\r\\n  }\\r\\n\\r\\n  //OnClick event for the move game to top button.\\r\\n  handleOnClick_btMoveGameToTop(e) {\\r\\n    const games = this.state.games;\\r\\n\\r\\n    for (let i = 0; i < games.length; i++)\\r\\n      if (games[i] === this.props.selectedGame) {\\r\\n        games.unshift(games[i]);\\r\\n        games.splice(i + 1, 1);\\r\\n        break;\\r\\n      }\\r\\n\\r\\n    this.setState({games: games}, this.setGameComboBoxLocalStorage);\\r\\n  }\\r\\n\\r\\n  //OnChange event for when the text in the game text box changes.\\r\\n  handleOnChange_tbGame(e) {\\r\\n    this.setState({gameName: e.target.value});\\r\\n  }\\r\\n\\r\\n  /*Just calls setSelectedGame() and setGameComboBoxLocalStorage(). Used\\r\\n    for setState callbacks.*/\\r\\n  setSelectedGameToFirstAndComboBoxLocalStorage() {\\r\\n    this.setSelectedGameToFirst();\\r\\n    this.setGameComboBoxLocalStorage();\\r\\n  }\\r\\n\\r\\n  /*Sets the selected game to the first in the array if\\r\\n    length is greater than 0. Used after removal of a game\\r\\n    and when initially loading the game dropdown.*/\\r\\n  setSelectedGameToFirst() {\\r\\n    const games = this.state.games;\\r\\n\\r\\n    if (games.length > 0)\\r\\n      this.props.setSelectedGame(games[0]);\\r\\n  }\\r\\n\\r\\n  /*Sets the local storage after addition, removal, or moving up\\r\\n    of a game.*/\\r\\n  setGameComboBoxLocalStorage() {\\r\\n    const games = this.state.games;\\r\\n\\r\\n    let toStoreString = games.join(\\\",;:!\\\");\\r\\n    localStorage.setItem('games', JSON.stringify(toStoreString));\\r\\n  }\\r\\n\\r\\n  /*Render the Header with the add game textbox, add game button,\\r\\n    games dropdown, remove game button, move game to top button, and status*/\\r\\n  render() {\\r\\n    return (\\r\\n      <div id=\\\"add-game-container\\\">\\r\\n        <input value={this.state.gameName} onChange={this.handleOnChange_tbGame} className=\\\"text-field fa\\\" placeholder=\\\"&#xf11b; Game to Add\\\"></input>\\r\\n        <button onClick={this.handleOnClick_btAddGame} id=\\\"btn-game-to-add\\\" className=\\\"btn fa fa-plus\\\"></button>\\r\\n\\r\\n        <div>\\r\\n          <GamesDropdown gameValue={this.state.gameValue} games={this.state.games} setSelectedGame={this.props.setSelectedGame} />\\r\\n          <button onClick={this.handleOnClick_btRemoveGame} className=\\\"btn fa fa-trash\\\"></button>\\r\\n          <button onClick={this.handleOnClick_btMoveGameToTop} className=\\\"btn fa fa-arrow-up\\\"></button>\\r\\n        </div>\\r\\n        <Status setStatusGood={this.setStatusGood} statusGood={this.state.statusGood} setStatusBad={this.setStatusBad} statusBad={this.state.statusBad} />\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default Header;\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport './App.css';\\r\\n\\r\\nfunction Stream(props) {\\r\\n    return (\\r\\n      <a href = { props.url } target = \\\"_blank\\\">\\r\\n        <div className=\\\"divToRemove\\\">\\r\\n          <img src = { props.thumbnail }></img>\\r\\n          <h1>{ props.displayName }</h1>\\r\\n          <p>{ props.title }</p>\\r\\n          <p>&nbsp;- { props.viewers } viewers</p>\\r\\n        </div>\\r\\n      </a>\\r\\n    );\\r\\n}\\r\\n\\r\\nexport default Stream;\\r\\n\",\"import React, { Component } from 'react';\\nimport {default as Stream} from './Stream'\\nimport API_KEY from './config'\\nimport './App.css';\\n\\n/*Class for the bottom portion of the app, which displays\\n  the streams, based on the selected game.*/\\nclass Streams extends Component {\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      isLoaded: false,\\n      streamsApiData: [],\\n      selectedGame: this.props.selectedGame\\n    };\\n  }\\n\\n  /*Makes an API call when component mounts, delayed by 100ms to\\n    be sure the selectedGame is not the default, but instead the\\n    correct one from local storage.*/\\n  componentDidMount() {\\n    setTimeout(() => {this.apiCall()}, 100);\\n  }\\n\\n  /*If current props and previous props of selected game don't match\\n    each other then set the state of selected game and make an API call\\n    to render streams for the new selecteed game.*/\\n  componentDidUpdate(prevProps) {\\n    if (this.props.selectedGame !== prevProps.selectedGame) {\\n      this.setState({selectedGame: this.props.selectedGame}, this.apiCall());\\n    }\\n  }\\n\\n  //API call to the Twitch API, using the selected game.\\n  apiCall() {\\n    let request = new XMLHttpRequest();\\n    request = this.openRequest(request, this.props.selectedGame);\\n    request.setRequestHeader('Client-ID', API_KEY);\\n    request.send();\\n\\n    request.onload = function () {\\n      let streamsApiData = JSON.parse(request.response);\\n\\n      if (request.status >= 200 && request.status < 400) {\\n        this.setState({\\n          isLoaded: true,\\n          streamsApiData: streamsApiData.streams\\n        });\\n      }\\n    }.bind(this);\\n  }\\n\\n  //Makes the game name into a valid url, then opens a request.\\n  openRequest(request, gameName) {\\n    let gameNameSplit = gameName.split(\\\" \\\");\\n    let gameUrl = gameNameSplit.join(\\\"%20\\\");\\n\\n    request.open(\\\"GET\\\", \\\"https://api.twitch.tv/kraken/streams/?game=\\\" + gameUrl, true);\\n\\n    return request;\\n  }\\n\\n  /*If the API call has not loaded return a div indicating that.\\n    If the length of API stream data is 0 create a div indicating that.\\n    If there is stream data render divs with the appropriate data.*/\\n  render() {\\n    const { isLoaded, streamsApiData } = this.state;\\n\\n    if (!isLoaded) {\\n      return (\\n        <div id=\\\"preloader-overlay\\\">\\n          <div id=\\\"preloader-spinner\\\"></div>\\n        </div>\\n      );\\n    } else if (streamsApiData.length === 0) {\\n      return  this.createDivForNoStream();\\n    } else {\\n      let streams = [];\\n      for (var i = 0; i < streamsApiData.length; i++) {\\n        streams.push(this.renderStream(streamsApiData, i));\\n      }\\n\\n      return <div>{ streams }</div>;\\n    }\\n  }\\n\\n  //Div that's created when there are no streams returned from the API call.\\n  createDivForNoStream() {\\n    return (\\n      <div>\\n        <h1>Invalid game name or no one is streaming this game</h1>\\n      </div>\\n    );\\n  }\\n\\n  //Creates a stream div based on API results.\\n  renderStream(data, i) {\\n    return (\\n      <Stream\\n        key = { i }\\n        thumbnail = { data[i].preview.small }\\n        title = { data[i].channel.status }\\n        displayName = { data[i].channel.display_name }\\n        viewers = { data[i].viewers }\\n        url = { data[i].channel.url }\\n      />\\n    );\\n  }\\n}\\n\\nexport default Streams;\\n\",\"const API_KEY = \\\"mr14v2oijk1jv4n8u49ixkv6raofcd\\\";\\r\\n\\r\\nexport default API_KEY\\r\\n\",\"import React, { Component } from 'react';\\r\\nimport {default as Header} from './Header';\\r\\nimport {default as Streams} from './Streams';\\r\\nimport './App.css';\\r\\n\\r\\n//Class for the highest level component.\\r\\nclass App extends Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n\\r\\n    this.state = {\\r\\n      selectedGame: \\\"\\\"\\r\\n    };\\r\\n\\r\\n    this.setSelectedGame = this.setSelectedGame.bind(this);\\r\\n  }\\r\\n\\r\\n  //Sets the state for the selected game from the games dropdown.\\r\\n  setSelectedGame(gameName) {\\r\\n    this.setState({selectedGame: gameName});\\r\\n  }\\r\\n\\r\\n  //Render the Header and Streams sections.\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <Header selectedGame={this.state.selectedGame} setSelectedGame={this.setSelectedGame}/>\\r\\n        <Streams selectedGame={this.state.selectedGame} />\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport {default as App} from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(e,t,a){e.exports=a(35)},21:function(e,t,a){},35:function(e,t,a){\"use strict\";a.r(t);var n=a(0),s=a.n(n),o=a(8),i=a.n(o),l=(a(21),a(2)),r=a(3),c=a(5),m=a(4),u=a(6),d=a(1),h=(a(7),a(24),function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(m.a)(t).call(this,e))).state={gameValue:a.props.gameValue},a.handleOnChange_GamesDropdown=a.handleOnChange_GamesDropdown.bind(Object(d.a)(Object(d.a)(a))),a}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"componentDidUpdate\",value:function(e){this.props.gameValue!==e.gameValue&&this.setState({gameValue:this.props.gameValue})}},{key:\"handleOnChange_GamesDropdown\",value:function(e){var t=e.target.value;this.setState({gameValue:t}),this.props.setSelectedGame(t)}},{key:\"render\",value:function(){var e=this.props.games;if(0===e.length)return s.a.createElement(\"select\",{className:\"combo-box\"},s.a.createElement(\"option\",null,\"No Games to Show\"));for(var t=[],a=0;a<e.length;a++)t.push(s.a.createElement(\"option\",{value:e[a]},e[a]));return s.a.createElement(\"select\",{value:this.state.gameValue,onChange:this.handleOnChange_GamesDropdown,className:\"combo-box\"},t)}}]),t}(n.Component)),p=a(9),v=a.n(p),b=function(e){function t(){return Object(l.a)(this,t),Object(c.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"render\",value:function(){var e=this,t=this.props,a=t.statusGood,n=t.statusBad;return a||n?a?(setTimeout(function(){e.props.setStatusGood(!1)},3e3),s.a.createElement(v.a,{transitionName:\"cross-fade\",transitionEnterTimeout:500,transitionLeaveTimeout:500},s.a.createElement(\"div\",{key:\"transitioning-component-1\",id:\"status-game-to-add\",className:\"status-good\"},\"Successful\"))):n?(setTimeout(function(){e.props.setStatusBad(!1)},3e3),s.a.createElement(v.a,{transitionName:\"cross-fade\",transitionEnterTimeout:500,transitionLeaveTimeout:500},s.a.createElement(\"div\",{key:\"transitioning-component-2\",id:\"status-game-to-add\",className:\"status-bad\"},\"Duplicate, nothing added\"))):void 0:s.a.createElement(v.a,{transitionName:\"cross-fade\",transitionEnterTimeout:500,transitionLeaveTimeout:500},s.a.createElement(\"div\",{key:\"transitioning-component-0\"}))}}]),t}(n.Component),g=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(m.a)(t).call(this,e))).state={games:[],gameName:\"\",gameValue:\"\",statusGood:!1,statusBad:!1},a.handleOnChange_tbGame=a.handleOnChange_tbGame.bind(Object(d.a)(Object(d.a)(a))),a.handleOnClick_btAddGame=a.handleOnClick_btAddGame.bind(Object(d.a)(Object(d.a)(a))),a.handleOnClick_btRemoveGame=a.handleOnClick_btRemoveGame.bind(Object(d.a)(Object(d.a)(a))),a.handleOnClick_btMoveGameToTop=a.handleOnClick_btMoveGameToTop.bind(Object(d.a)(Object(d.a)(a))),a.setStatusBad=a.setStatusBad.bind(Object(d.a)(Object(d.a)(a))),a.setStatusGood=a.setStatusGood.bind(Object(d.a)(Object(d.a)(a))),a}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"componentDidMount\",value:function(){var e=JSON.parse(localStorage.getItem(\"games\"));if(null!=e&&\"\"!==e.trim()){var t=e.split(\",;:!\");this.setState({games:t},this.setSelectedGameToFirst)}}},{key:\"setStatusBad\",value:function(e){this.setState({statusBad:e})}},{key:\"setStatusGood\",value:function(e){this.setState({statusGood:e})}},{key:\"handleOnClick_btAddGame\",value:function(e){for(var t=this.state,a=t.games,n=t.gameName,s=0;s<a.length;s++)if(a[s]==n)return void this.setState({statusBad:!0},this.setState({statusBad:!1}));this.setState({games:a.concat(n),gameValue:n},this.setGameComboBoxLocalStorage),this.props.setSelectedGame(this.state.gameName),this.setState({gameName:\"\",statusGood:!0})}},{key:\"handleOnClick_btRemoveGame\",value:function(e){for(var t=this.state.games,a=0;a<t.length;a++)if(t[a]===this.props.selectedGame){t.splice(a,1);break}this.setState({games:t},this.setSelectedGameToFirstAndComboBoxLocalStorage)}},{key:\"handleOnClick_btMoveGameToTop\",value:function(e){for(var t=this.state.games,a=0;a<t.length;a++)if(t[a]===this.props.selectedGame){t.unshift(t[a]),t.splice(a+1,1);break}this.setState({games:t},this.setGameComboBoxLocalStorage)}},{key:\"handleOnChange_tbGame\",value:function(e){this.setState({gameName:e.target.value})}},{key:\"setSelectedGameToFirstAndComboBoxLocalStorage\",value:function(){this.setSelectedGameToFirst(),this.setGameComboBoxLocalStorage()}},{key:\"setSelectedGameToFirst\",value:function(){var e=this.state.games;e.length>0&&this.props.setSelectedGame(e[0])}},{key:\"setGameComboBoxLocalStorage\",value:function(){var e=this.state.games.join(\",;:!\");localStorage.setItem(\"games\",JSON.stringify(e))}},{key:\"render\",value:function(){return s.a.createElement(\"div\",{id:\"add-game-container\"},s.a.createElement(\"input\",{value:this.state.gameName,onChange:this.handleOnChange_tbGame,className:\"text-field fa\",placeholder:\"\\uf11b Game to Add\"}),s.a.createElement(\"button\",{onClick:this.handleOnClick_btAddGame,id:\"btn-game-to-add\",className:\"btn fa fa-plus\"}),s.a.createElement(\"div\",null,s.a.createElement(h,{gameValue:this.state.gameValue,games:this.state.games,setSelectedGame:this.props.setSelectedGame}),s.a.createElement(\"button\",{onClick:this.handleOnClick_btRemoveGame,className:\"btn fa fa-trash\"}),s.a.createElement(\"button\",{onClick:this.handleOnClick_btMoveGameToTop,className:\"btn fa fa-arrow-up\"})),s.a.createElement(b,{setStatusGood:this.setStatusGood,statusGood:this.state.statusGood,setStatusBad:this.setStatusBad,statusBad:this.state.statusBad}))}}]),t}(n.Component);var f=function(e){return s.a.createElement(\"a\",{href:e.url,target:\"_blank\"},s.a.createElement(\"div\",{className:\"divToRemove\"},s.a.createElement(\"img\",{src:e.thumbnail}),s.a.createElement(\"h1\",null,e.displayName),s.a.createElement(\"p\",null,e.title),s.a.createElement(\"p\",null,\"\\xa0- \",e.viewers,\" viewers\")))},G=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(m.a)(t).call(this,e))).state={isLoaded:!1,streamsApiData:[],selectedGame:a.props.selectedGame},a}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"componentDidMount\",value:function(){var e=this;setTimeout(function(){e.apiCall()},100)}},{key:\"componentDidUpdate\",value:function(e){this.props.selectedGame!==e.selectedGame&&this.setState({selectedGame:this.props.selectedGame},this.apiCall())}},{key:\"apiCall\",value:function(){var e=new XMLHttpRequest;(e=this.openRequest(e,this.props.selectedGame)).setRequestHeader(\"Client-ID\",\"mr14v2oijk1jv4n8u49ixkv6raofcd\"),e.send(),e.onload=function(){var t=JSON.parse(e.response);e.status>=200&&e.status<400&&this.setState({isLoaded:!0,streamsApiData:t.streams})}.bind(this)}},{key:\"openRequest\",value:function(e,t){var a=t.split(\" \").join(\"%20\");return e.open(\"GET\",\"https://api.twitch.tv/kraken/streams/?game=\"+a,!0),e}},{key:\"render\",value:function(){var e=this.state,t=e.isLoaded,a=e.streamsApiData;if(t){if(0===a.length)return this.createDivForNoStream();for(var n=[],o=0;o<a.length;o++)n.push(this.renderStream(a,o));return s.a.createElement(\"div\",null,n)}return s.a.createElement(\"div\",{id:\"preloader-overlay\"},s.a.createElement(\"div\",{id:\"preloader-spinner\"}))}},{key:\"createDivForNoStream\",value:function(){return s.a.createElement(\"div\",null,s.a.createElement(\"h1\",null,\"Invalid game name or no one is streaming this game\"))}},{key:\"renderStream\",value:function(e,t){return s.a.createElement(f,{key:t,thumbnail:e[t].preview.small,title:e[t].channel.status,displayName:e[t].channel.display_name,viewers:e[t].viewers,url:e[t].channel.url})}}]),t}(n.Component),O=function(e){function t(e){var a;return Object(l.a)(this,t),(a=Object(c.a)(this,Object(m.a)(t).call(this,e))).state={selectedGame:\"\"},a.setSelectedGame=a.setSelectedGame.bind(Object(d.a)(Object(d.a)(a))),a}return Object(u.a)(t,e),Object(r.a)(t,[{key:\"setSelectedGame\",value:function(e){this.setState({selectedGame:e})}},{key:\"render\",value:function(){return s.a.createElement(\"div\",null,s.a.createElement(g,{selectedGame:this.state.selectedGame,setSelectedGame:this.setSelectedGame}),s.a.createElement(G,{selectedGame:this.state.selectedGame}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(s.a.createElement(O,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},7:function(e,t,a){}},[[16,2,1]]]);","extractedComments":[]}